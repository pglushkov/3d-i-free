
#version 130

uniform float time;
varying vec4 figureColor;
varying vec2 plane_coord;
varying vec3 rnorm;
varying vec3 light_dir;

void main()
{
        float intensity = dot(rnorm, light_dir);
	float orig_intensity = 0.0;

        float rchan = orig_intensity*figureColor[0] + figureColor[0] * intensity;
        float gchan = orig_intensity*figureColor[1] + figureColor[1] * intensity;
        float bchan = orig_intensity*figureColor[2] + figureColor[2] * intensity;

        vec3 lambert_color = vec3(rchan, gchan, bchan);
        gl_FragColor = vec4(lambert_color, figureColor[3]);

        //DBG!!!
        //gl_FragColor = vec4(rnorm, 1.0);




        //vec3 lambert_color = vec3(figureColor[0] * intensity, figureColor[1] * intensity, figureColor[2] * intensity);
        //vec3 lambert_color = vec3(plane_coord[0] * intensity, plane_coord[1] * intensity, 0.0);
        //vec3 lambert_color = vec3(figureColor[0], figureColor[1], figureColor[2]);


}

